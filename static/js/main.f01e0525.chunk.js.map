{"version":3,"sources":["utils/consts.js","store/tasksReducer.js","utils/propsTypes.js","components/timeDisplay.js","components/timer/timer.js","pages/home/home.js","hooks/useTimer.js","services/spendTime.js","services/dataTask.js","pages/home/homeContainer.js","components/loaderSpinner/loaderSpinner.js","pages/taskId/taskId.js","pages/taskId/taskIdContainer.js","assets/images/error-404-design.png","pages/Error404.js","routers/routers.js","App.js","store/index.js","index.js"],"names":["ADD_TASK","REMOVE_TASK","REMOVE_ALL_TASK","DESC_TASK_STORAGE","TIME_START_STORAGE","TASKS_ARR_STORAGE","INIT_TASK","COLOR_1","BORDER_STYLE","RANDOM_TASKS_ARR","taskListStore","tasksList","addTask","payload","type","PropTypes","number","isRequired","TimeDisplay","time","props","Box","h","m","s","day","month","year","useStyles","makeStyles","circle","width","height","borderRadius","boxShadow","margin","timerBlock","color","fontSize","Timer","classes","Grid","container","justifyContent","alignItems","spacing","className","panelControl","marginTop","input","tasksLog","background","textTransform","panelControlItem","padding","taskBlock","borderBottom","panelLog","btn","Home","inputTask","handleChange","isRun","startTimer","stopTimer","taskList","deleteTask","generateTasks","history","useHistory","direction","item","TextField","id","label","inputProps","min","maxLength","style","textAlign","multiline","maxRows","value","onChange","e","Button","variant","onClick","xs","map","i","descTask","startTime","endTime","spendTime","length","slice","push","useTimer","useState","setTime","interv","setInterv","setIsRun","updatedH","updatedM","updatedS","run","start","state","setInterval","stop","clearInterval","setTimer","initialTimer","parseInitialTimer","Date","newTime","now","parseInt","SpendTime","dateStartTask","hours","minutes","seconds","spendTimeMs","DataTask","uuidv4","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","HomeContainer","dispatch","useDispatch","useSelector","tasks","setInputTask","useEffect","localStorage","getItem","JSON","parse","currentTarget","setItem","stringify","parseDateStart","parseDateEnd","newTaskCompleted","removeItem","countTasks","Math","floor","random","randomHoursStartTime","randomMinutesStartTime","randomSecondsStartTime","randomDaysStartTime","randomStartTaskDate","plusTimeToDateStart","dateEndTask","randomNameTask","LoaderSpinner","card","marginRight","TaskId","taskData","isLoading","Card","CardContent","CardActions","size","TaskIdContainer","useParams","setLoading","setTaskData","findTask","find","task","errorBlock","block","Error404","src","img404","alt","Alert","severity","Link","href","underline","routers","path","Component","isExact","TASK_ROUTE","App","forEach","Container","maxWidth","exact","component","rootReducer","combineReducers","action","tasksListAddedTask","newStateAddedTask","tasksListRemovedTask","filter","newStateRemovedTask","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"kMAOaA,EAAW,WACvBC,EAAc,cACdC,EAAkB,kBAGNC,EAAoB,WAChCC,EAAqB,YACrBC,EAAoB,YACpBC,EAAY,oBAGAC,EAAU,UAIVC,EAAe,oBAGfC,EAAmB,CAC/B,qBACA,qBACA,eACA,cACA,gBACA,kBACA,gBACA,6BACA,uBACA,2BACA,cACA,0BACA,6BACA,sBACA,uCACA,gBACA,WACA,sCACA,YACA,mBACA,cACA,mBACA,iBACA,QACA,OACA,kBC3CKC,EAAgB,CACrBC,UAAW,IA4CCC,EAAU,SAAAC,GAAO,MAAK,CAAEC,KAAMd,EAAUa,Y,uFClDjDE,IAAUC,OAAOC,WACjBF,IAAUC,OAAOC,WACjBF,IAAUC,OAAOC,WACfF,IAAUC,OACRD,IAAUC,OACXD,IAAUC,O,iBCsBFE,EArBK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,iBAC3C,OACC,eAACC,EAAA,EAAD,2BAASD,GAAT,cACED,EAAKG,GAAK,GAAKH,EAAKG,EAAI,IAAMH,EAAKG,EADrC,IAEEH,EAAKI,GAAK,GAAKJ,EAAKI,EAAI,IAAMJ,EAAKI,EAFrC,IAGEJ,EAAKK,GAAK,GAAKL,EAAKK,EAAI,IAAML,EAAKK,EACnCL,EAAKM,KACL,qCACC,uBADD,IACSN,EAAKM,IAAM,GAAK,IAAMN,EAAKM,IAAMN,EAAKM,IAD/C,IAEEN,EAAKO,MAAQ,GAAK,IAAMP,EAAKO,MAAQP,EAAKO,MAF5C,IAGEP,EAAKQ,KAHP,Y,mCCCEC,EAAYC,IAAW,CAC5BC,OAAQ,CACPC,MAAO,IACPC,OAAQ,IACRC,aAAc,MACdC,UAAW,+BACXC,OAAQ,UAETC,WAAY,CACXC,MAAO9B,EACP+B,SAAU,MAyBGC,EArBD,SAAC,GAAc,IAAZpB,EAAW,EAAXA,KAEVqB,EAAUZ,IAEhB,OACC,cAACa,EAAA,EAAD,CACCC,WAAS,EACTC,eAAe,SACfC,WAAW,SACXC,QAAS,EACTC,UAAWN,EAAQV,OALpB,SAOC,cAAC,EAAD,CAAaX,KAAMA,EAAM2B,UAAWN,EAAQJ,gB,kBChBzCR,EAAYC,IAAW,CAC5BkB,aAAc,CACbC,UAAW,IAEZC,MAAO,CACN,UAAW,CACVZ,MAAO9B,IAGT2C,SAAU,CACTC,WAAY,UACZd,MAAO,QACPe,cAAe,aACfpB,OAAQ,IAETqB,iBAAkB,CACjBhB,MAAO,OACPiB,QAAS,UAEVC,UAAW,CACVlB,MAAO9B,EACP+C,QAAS,SACTH,WL9BS,UK+BTK,aAAchD,GAEfiD,SAAU,CACTD,aAAchD,GAEfkD,IAAK,CACJrB,MAAO9B,EACP4C,WAAY,WA8NCQ,EA1NF,SAAC,GAUP,IATNC,EASK,EATLA,UACAC,EAQK,EARLA,aACA1C,EAOK,EAPLA,KACA2C,EAMK,EANLA,MACAC,EAKK,EALLA,WACAC,EAIK,EAJLA,UACAC,EAGK,EAHLA,SACAC,EAEK,EAFLA,WACAC,EACK,EADLA,cAGM3B,EAAUZ,IAGVwC,EAAUC,cAEhB,OACC,qCAEC,eAAC5B,EAAA,EAAD,CACCC,WAAS,EACTG,QAAS,EACTyB,UAAU,SACV1B,WAAW,SACXE,UAAWN,EAAQO,aALpB,UAQC,cAACN,EAAA,EAAD,CAAM8B,MAAI,EAAV,SACC,cAACC,EAAA,EAAD,CACCC,GAAG,aACHC,OAAO,EACPrC,MAAM,UACNsC,WAAY,CACXC,IAAK,EACLC,UAAW,GACXC,MAAO,CAAEC,UAAW,WAErBC,WAAS,EACTC,QAAS,EACTC,MAAOtB,EACPuB,SAAU,SAAAC,GAAC,OAAIvB,EAAauB,IAC5BtC,UAAWN,EAAQS,UAKrB,cAACR,EAAA,EAAD,CAAM8B,MAAI,EAAV,SACC,cAAC,EAAD,CAAOpD,KAAMA,MAId,cAACsB,EAAA,EAAD,CAAM8B,MAAI,EAAV,SACET,EACA,cAACuB,EAAA,EAAD,CACCC,QAAQ,YACRjD,MAAM,YACNkD,QAASvB,EAHV,kBAQA,cAACqB,EAAA,EAAD,CACCC,QAAQ,WACRC,QAASxB,EACT1B,MAAM,UAHP,wBAYH,cAACI,EAAA,EAAD,CACCC,WAAS,EACTC,eAAe,SACfG,UAAWN,EAAQO,aAHpB,SAKC,cAACN,EAAA,EAAD,CACC8B,MAAI,EACJzB,UAAWN,EAAQU,SACnBsC,GAAI,GACJ9C,WAAS,EACTC,eAAe,SACfC,WAAW,SANZ,yBAaD,eAACH,EAAA,EAAD,CACCC,WAAS,EACTC,eAAe,eACfC,WAAW,SACXE,UAAWN,EAAQiB,SAJpB,UAMC,cAAChB,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAACnE,EAAA,EAAD,CAAKyB,UAAWN,EAAQa,iBAAxB,sBAED,cAACZ,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAACnE,EAAA,EAAD,CAAKyB,UAAWN,EAAQa,iBAAxB,oBAED,cAACZ,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAACnE,EAAA,EAAD,CAAKyB,UAAWN,EAAQa,iBAAxB,0BAED,cAACZ,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAACnE,EAAA,EAAD,CAAKyB,UAAWN,EAAQa,iBAAxB,wBAED,cAACZ,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAACnE,EAAA,EAAD,CAAKyB,UAAWN,EAAQa,iBAAxB,0BAED,cAACZ,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAACnE,EAAA,EAAD,CAAKyB,UAAWN,EAAQa,iBAAxB,oBAED,cAACZ,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAACnE,EAAA,EAAD,CAAKyB,UAAWN,EAAQa,iBAAxB,yBAIF,eAAC,IAAD,WAEEY,EAASwB,KACT,WAAkDC,GAAO,IAAtDjB,EAAqD,EAArDA,GAAIkB,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,UACpC,OACC,eAACrD,EAAA,EAAD,CAECC,WAAS,EACTC,eAAe,eACfC,WAAW,SACXE,UAAWN,EAAQe,UALpB,UAOC,cAACd,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAACnE,EAAA,EAAD,UAAMqE,EAAI,MAEX,cAACjD,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAACnE,EAAA,EAAD,UACEsE,EAASI,QAAU,GACjBJ,EAASK,MAAM,EAAG,IAAM,MACxBL,MAGL,cAAClD,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAAC,EAAD,CAAarE,KAAMyE,MAEpB,cAACnD,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAAC,EAAD,CAAarE,KAAM0E,MAEpB,cAACpD,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAAC,EAAD,CAAarE,KAAM2E,MAEpB,cAACrD,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAACH,EAAA,EAAD,CACCC,QAAQ,WACRxC,UAAWN,EAAQkB,IACnB6B,QAAS,kBACRnB,EAAQ6B,KAAK,SAAWxB,IAJ1B,oBAUD,cAAChC,EAAA,EAAD,CAAM8B,MAAI,EAACiB,GAAI,EAAf,SACC,cAACH,EAAA,EAAD,CACCC,QAAQ,WACRxC,UAAWN,EAAQkB,IACnB6B,QAAS,kBAAMrB,EAAWO,IAH3B,wBArCIA,MAmDT,cAAChC,EAAA,EAAD,CACCC,WAAS,EACTG,QAAS,EACTyB,UAAU,SACV1B,WAAW,SACXE,UAAWN,EAAQO,aALpB,SAOC,cAACsC,EAAA,EAAD,CACCC,QAAQ,WACRjD,MAAM,UACNkD,QAASpB,EAHV,qCCvMU+B,EA7CE,WAChB,MAAwBC,mBAAS,CAAE7E,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAAlD,mBAAOL,EAAP,KAAaiF,EAAb,KACA,EAA4BD,mBAAS,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAA0BH,oBAAS,GAAnC,mBAAOrC,EAAP,KAAcyC,EAAd,KAEIC,EAAWrF,EAAKG,EACnBmF,EAAWtF,EAAKI,EAChBmF,EAAWvF,EAAKK,EAUXmF,EAAM,WACM,KAAbF,IACHD,IACAC,GAAY,GAEI,KAAbC,IACHD,IACAC,GAAY,GAEbN,EAAQ,CAAE9E,EAAGkF,EAAUjF,EAAGkF,EAAUjF,EAAGkF,IACvCA,KAeD,MAAO,CAAEE,MAZK,WACbD,IACAJ,GAAS,SAAAM,GAAK,OAAKA,KACnBP,EAAUQ,YAAYH,EAAK,OASZI,KANH,WACZC,cAAcX,GACdE,GAAS,SAAAM,GAAK,OAAKA,KACnBT,EAAQ,CAAE9E,EAAG,EAAGC,EAAG,EAAGC,EAAG,KAGJL,OAAM2C,QAAOmD,SAjClB,SAAAC,GAChB,IAAMC,EAAoB,IAAIC,KAAKF,GAC7BG,EAAU,IAAID,KAAKA,KAAKE,MAAQH,GACtCX,EAAWe,SAAUF,EAAO,KAAuB,IACnDZ,EAAWc,SAAUF,EAAO,IAAkB,IAC9CX,EAAWa,SAAUF,EAAU,IAAQ,OCN1BG,EAVG,SAAC5B,EAAWC,GAC7B,IAAM4B,EAAgB,IAAIL,KAAKxB,GACzByB,EAAU,IAAID,KAAKvB,EAAU4B,GAKnC,MAAO,CAAEC,MAJKH,SAAUF,EAAO,KAAuB,IAItCM,QAHLJ,SAAUF,EAAO,IAAkB,IAGrBO,QAFdL,SAAUF,EAAU,IAAQ,IAELQ,YAAaR,I,SC0BjCS,EA9BE,SAAC,GAAiD,IAA/ClC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,UAAWH,EAAe,EAAfA,SAGlD,MAAO,CACNlB,GAHUsD,cAIVpC,WACAC,UAAW,CACVtE,EAAGsE,EAAUoC,WACbzG,EAAGqE,EAAUqC,aACbzG,EAAGoE,EAAUsC,aACbzG,IAAKmE,EAAUuC,UACfzG,MAAOkE,EAAUwC,WAAa,EAC9BzG,KAAMiE,EAAUyC,eAEjBxC,QAAS,CACRvE,EAAGuE,EAAQmC,WACXzG,EAAGsE,EAAQoC,aACXzG,EAAGqE,EAAQqC,aACXzG,IAAKoE,EAAQsC,UACbzG,MAAOmE,EAAQuC,WAAa,EAC5BzG,KAAMkE,EAAQwC,eAEfvC,UAAW,CACVxE,EAAGwE,EAAU4B,MACbnG,EAAGuE,EAAU6B,QACbnG,EAAGsE,EAAU8B,WCsIDU,EAxIO,WAErB,IAAMC,EAAWC,cACXvE,EAAWwE,aAAY,SAAA5B,GAAK,OAAIA,EAAM6B,MAAM/H,aAGlD,EAAkCwF,mBAAS7F,GAA3C,mBAAOsD,EAAP,KAAkB+E,EAAlB,KAQA,EAA+CzC,IAAvCU,EAAR,EAAQA,MAAOG,EAAf,EAAeA,KAAM5F,EAArB,EAAqBA,KAAM2C,EAA3B,EAA2BA,MAAOmD,EAAlC,EAAkCA,SAElC2B,qBAAU,WACT,GACCC,aAAaC,QAAQ1I,IACrByI,aAAaC,QAAQ3I,GACpB,CACD,IAAMyF,EAAYmD,KAAKC,MACtBH,aAAaC,QAAQ1I,IAEhBuF,EAAWoD,KAAKC,MACrBH,aAAaC,QAAQ3I,IAEtBwI,EAAahD,GACbsB,EAASrB,GACTgB,OAEC,IA0FH,OACC,cAAC,EAAD,CACChD,UAAWA,EACXC,aArHmB,SAAAuB,GACpBuD,EAAavD,EAAE6D,cAAc/D,OAC7B2D,aAAaK,QACZ/I,EACA4I,KAAKI,UAAU/D,EAAE6D,cAAc/D,SAkH/B/D,KAAMA,EACN2C,MAAOA,EACPC,WA9FiB,WAClB8E,aAAaK,QAAQ9I,EAAoB2I,KAAKI,UAAU/B,KAAKE,QAC7DuB,aAAaK,QAAQ/I,EAAmB4I,KAAKI,UAAUvF,IACvDgD,KA4FC5C,UAzFgB,WACjB,IAAM4B,EAAYmD,KAAKC,MAAMH,aAAaC,QAAQ1I,IAE5C0F,EAAY0B,EAAU5B,EAAWwB,KAAKE,OACtC8B,EAAiB,IAAIhC,KAAKxB,GAC1ByD,EAAe,IAAIjC,KACxBxB,EAAYwB,KAAK4B,MAAMlD,EAAU+B,cAG5ByB,EAAmBxB,EAAS,CACjClC,UAAWwD,EACXvD,QAASwD,EACTvD,UAAWA,EACXH,SAAU/B,IAGX2E,EAAS3H,EAAQ0I,IACjBT,aAAaU,WAAWnJ,GACxByI,aAAaU,WAAWpJ,GACxBwI,EAAarI,GACbyG,KAsEC9C,SAAUA,EACVC,WApEiB,SAAAO,GAClB8D,ERnCwB,CAAEzH,KAAMb,EAAaY,QQmCzB4D,KAoEnBN,cAhEoB,WACrBoE,ERvCuB,CAAEzH,KAAMZ,IQgE/B,IAtBA,IAAMsJ,EAAaC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,GAI7CC,EACkC,KAAtCH,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAAY,GAAK,GAC9CE,EACkC,KAAtCJ,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAAY,GACzCG,EACkC,KAAtCL,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAC7BI,EAC2C,KAA/CN,KAAKC,MARa,EAQPD,KAAKE,UAA0B,GAAY,GAAK,GAAK,GAC5DK,EAAsB,IAAI5C,KAC/BA,KAAKE,MACJyC,EACAD,EACAD,EACAD,GAIEK,EAAsB7C,KAAK4B,MAAMgB,GAC5BtE,EAAI,EAAGA,EAAI8D,EAAY9D,IAAK,CAEpC,IAAME,EAAY,IAAIwB,KAAK6C,GAO3BA,GALyC,KAAvCR,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAAa,GAEd,IAAjCF,KAAKC,MAAsB,GAAhBD,KAAKE,UAIjB,IAAMO,EAAc,IAAI9C,KAAK6C,GACvBnE,EAAY0B,EAAU5B,EAAWsE,GACjCC,EAAiBV,KAAKC,MAC3BD,KAAKE,SAAWlJ,EAAiBsF,QAI5BuD,EAAmBxB,EAAS,CACjClC,UAAWA,EACXC,QAASqE,EACTpE,UAAWA,EACXH,SAAUlF,EAAiB0J,KAG5B5B,EAAS3H,EAAQ0I,S,6CCzGLc,G,OAjCO,WACrB,OACC,qBAAKtH,UAAU,qCAAf,SACC,sBAAKA,UAAU,mBAAf,UACC,8BACC,0BAED,8BACC,0BAED,8BACC,0BAED,8BACC,0BAED,8BACC,0BAED,8BACC,0BAED,8BACC,0BAED,8BACC,iCCPClB,EAAYC,IAAW,CAC5BwI,KAAM,CACLrI,OAAQ,SAETM,SAAU,CACTA,SAAU,IAEXoB,IAAK,CACJpB,SAAU,IAEXgI,YAAa,CACZA,YAAa,KAgIAC,GA5HA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAErBrG,EAAUC,cAGV7B,EAAUZ,IAEhB,OAAI6I,EAEF,cAAChI,EAAA,EAAD,CACCC,WAAS,EACTC,eAAe,SACfC,WAAW,SACXE,UAAWN,EAAQ6H,KAJpB,SAMC,cAAC,EAAD,MAMF,cAAC5H,EAAA,EAAD,CACCC,WAAS,EACTC,eAAe,SACfC,WAAW,SACXE,UAAWN,EAAQ6H,KAJpB,SAMC,eAACK,EAAA,EAAD,WACC,eAACC,EAAA,EAAD,WACC,eAAClI,EAAA,EAAD,CACCC,WAAS,EACTE,WAAW,SACXE,UAAWN,EAAQF,SAHpB,UAKC,cAACjB,EAAA,EAAD,CAAKyB,UAAWN,EAAQ8H,YAAxB,SACC,wCAED,cAACjJ,EAAA,EAAD,UAAMmJ,EAAS7E,cAGhB,uBAEA,eAAClD,EAAA,EAAD,CACCC,WAAS,EACTE,WAAW,aACXE,UAAWN,EAAQF,SAHpB,UAKC,cAACjB,EAAA,EAAD,CAAKyB,UAAWN,EAAQ8H,YAAxB,SACC,8CAED,cAACjJ,EAAA,EAAD,UACC,cAAC,EAAD,CACCF,KAAMqJ,EAAS5E,UACf9C,UAAWN,EAAQJ,kBAKtB,uBAEA,eAACK,EAAA,EAAD,CACCC,WAAS,EACTE,WAAW,aACXE,UAAWN,EAAQF,SAHpB,UAKC,cAACjB,EAAA,EAAD,CAAKyB,UAAWN,EAAQ8H,YAAxB,SACC,4CAED,cAACjJ,EAAA,EAAD,UACC,cAAC,EAAD,CACCF,KAAMqJ,EAAS3E,QACf/C,UAAWN,EAAQJ,kBAKtB,uBAEA,eAACK,EAAA,EAAD,CACCC,WAAS,EACTE,WAAW,SACXE,UAAWN,EAAQF,SAHpB,UAKC,cAACjB,EAAA,EAAD,CAAKyB,UAAWN,EAAQ8H,YAAxB,SACC,8CAED,cAACjJ,EAAA,EAAD,UACC,cAAC,EAAD,CACCF,KAAMqJ,EAAS1E,UACfhD,UAAWN,EAAQJ,qBAKvB,cAACwI,EAAA,EAAD,UACC,eAACvF,EAAA,EAAD,CACCwF,KAAK,QACLtF,QAAS,kBAAMnB,EAAQ6B,KAAK,MAC5BnD,UAAWN,EAAQkB,IAHpB,UAKC,cAAC,IAAD,CACCpB,SAAS,QACTQ,UAAWN,EAAQ8H,cACjB,IARJ,kBChGUQ,GA/BS,WAEvB,IAAMrG,EAAOsG,cAAPtG,GACFL,EAAUC,cAGd,EAAgC8B,oBAAS,GAAzC,mBAAOsE,EAAP,KAAkBO,EAAlB,KACA,EAAgC7E,oBAAS,GAAzC,mBAAOqE,EAAP,KAAiBS,EAAjB,KAqBA,OAlBArC,qBAAU,WACT,GAAIC,aAAaC,QAAQzI,GAAoB,CAC5C,IAGM6K,EAH4BnC,KAAKC,MACtCH,aAAaC,QAAQzI,IAEqB8K,MAC1C,SAAAC,GAAI,OAAIA,EAAK3G,KAAOA,KAErB,OAAKyG,GAGLF,GAAW,GACJC,EAAYC,IAHX9G,EAAQ6B,KAAK,QAMtB,OAAO7B,EAAQ6B,KAAK,UAClB,CAACwE,IAEG,cAAC,GAAD,CAAQA,UAAWA,EAAWD,SAAUA,KCnCjC,OAA0B,6C,oBCenC5I,GAAYC,IAAW,CAC5BwJ,WAAY,CACXrJ,OAAQ,SAETsJ,MAAO,CACNtI,UAAW,MAwCEuI,GApCE,WAChB,IAAM/I,EAAUZ,KACVwC,EAAUC,cAIhB,OACC,eAAC5B,EAAA,EAAD,CACCC,WAAS,EACTC,eAAe,SACfC,WAAW,SACX0B,UAAU,SACVxB,UAAWN,EAAQ6I,WALpB,UAOC,cAAC5I,EAAA,EAAD,CAAM8B,MAAI,EAAV,SACC,qBAAKiH,IAAKC,GAAQC,IAAI,UAEvB,cAACjJ,EAAA,EAAD,CAAM8B,MAAI,EAAV,SACC,cAACoH,GAAA,EAAD,CAAOC,SAAS,QAAhB,6CAED,eAACnJ,EAAA,EAAD,CAAM8B,MAAI,EAACzB,UAAWN,EAAQ8I,MAA9B,eACI,IACH,cAACO,GAAA,EAAD,CACCxJ,MAAM,UACNyJ,KAAK,IACLC,UAAU,SACVxG,QAtBW,kBAAMnB,EAAQ6B,KAAK,MAkB/B,kBAFD,WC/BU+F,GAAU,CACtB,CACCC,KfdwB,IeexBC,UAAW5D,EACX6D,SAAS,GAEV,CACCF,KAAMG,YACNF,UAAWpB,GACXqB,SAAS,GAEV,CACCF,KftBiB,OeuBjBC,UAAWX,GACXY,SAAS,GAEV,CACCF,Kf1BiB,Ie2BjBC,UAAWX,GACXY,SAAS,ICmBIE,OA9Bf,WACC,IAAM9D,EAAWC,cAWjB,OATAI,qBAAU,WACLC,aAAaC,QAAQzI,IACU0I,KAAKC,MACtCH,aAAaC,QAAQzI,IAEIiM,SAAQ,SAAAlB,GAAI,OAAI7C,EAAS3H,EAAQwK,SAE1D,CAAC7C,IAGH,cAACgE,EAAA,EAAD,CAAWC,SAAS,KAApB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,UACER,GAAQvG,KAAI,gBAAGwG,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,QAApB,OACZ,cAAC,IAAD,CAECF,KAAMA,EACNQ,MAAON,EACPO,UAAWR,GAHND,a,mBCjCNU,GAAcC,2BAAgB,CACnClE,MhBK2B,WAAoC,IAAnC7B,EAAkC,uDAA1BnG,EAAemM,EAAW,uCAC9D,OAAQA,EAAO/L,MACd,KAAKd,EACJ,IAAM8M,EAAkB,CAAID,EAAOhM,SAAX,mBAAuBgG,EAAMlG,YAC/CoM,EAAiB,2BACnBlG,GADmB,IAEtBlG,UAAWmM,IAMZ,OAJAjE,aAAaK,QACZ7I,EACA0I,KAAKI,UAAU2D,IAETC,EAGR,KAAK9M,EACJ,IAAM+M,EAAuBnG,EAAMlG,UAAUsM,QAC5C,SAAA1I,GAAI,OAAIA,EAAKE,KAAOoI,EAAOhM,WAEtBqM,EAAmB,2BACrBrG,GADqB,IAExBlG,UAAWqM,IAMZ,OAJAnE,aAAaK,QACZ7I,EACA0I,KAAKI,UAAU6D,IAETE,EAGR,KAAKhN,EAEJ,OADA2I,aAAaU,WAAWlJ,GACjB,2BAAKwG,GAAZ,IAAmBlG,UAAW,KAG/B,QACC,OAAOkG,MgBtCGsG,GAAQC,uBAAYT,GAAaU,kCCE9CC,IAASC,OACR,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACC,cAAC,GAAD,MAEDK,SAASC,eAAe,W","file":"static/js/main.f01e0525.chunk.js","sourcesContent":["//routers:\r\nexport const HOME_ROUTE = '/',\r\n\tTASK_ROUTE = '/task',\r\n\tERROR_404_ROUTE = '/404',\r\n\tNOT_FOUND_ROUTE = '*';\r\n\r\n//reducers:\r\nexport const ADD_TASK = 'ADD_TASK',\r\n\tREMOVE_TASK = 'REMOVE_TASK',\r\n\tREMOVE_ALL_TASK = 'REMOVE_ALL_TASK';\r\n\r\n//variables for localStorage and default initial value of task:\r\nexport const DESC_TASK_STORAGE = 'descTask',\r\n\tTIME_START_STORAGE = 'timeStart',\r\n\tTASKS_ARR_STORAGE = 'tasksList',\r\n\tINIT_TASK = 'Name of your task';\r\n\r\n//colors:\r\nexport const COLOR_1 = '#3057c8',\r\n\tCOLOR_2 = '#eaf6ff';\r\n\r\n//styles:\r\nexport const BORDER_STYLE = '2px solid #e0e0e0';\r\n\r\n//random a Tasks:\r\nexport const RANDOM_TASKS_ARR = [\r\n\t'To wash the dishes',\r\n\t'Clean up the house',\r\n\t'fill the car',\r\n\t'read a book',\r\n\t'teach lessons',\r\n\t'Vacuum the room',\r\n\t'Learn English',\r\n\t'Make a test of \"Brocoders\"',\r\n\t'Finish a pet project',\r\n\t'Repeat Design Algorithms',\r\n\t'Learn React',\r\n\t'Learn React Redax, Mobx',\r\n\t'Repeat regular expressions',\r\n\t'Take over the world',\r\n\t'Invent a vaccine against coronavirus',\r\n\t'help the poor',\r\n\t'Meditate',\r\n\t'To do something useful for humanity',\r\n\t'Do sports',\r\n\t'Find a new hobby',\r\n\t'The Running',\r\n\t'To build a house',\r\n\t'To see a movie',\r\n\t'Relax',\r\n\t'Wash',\r\n\t'Mop the floors',\r\n];\r\n","//variables:\r\nimport {\r\n\tADD_TASK,\r\n\tREMOVE_TASK,\r\n\tTASKS_ARR_STORAGE,\r\n\tREMOVE_ALL_TASK,\r\n} from '../utils/consts';\r\n\r\nconst taskListStore = {\r\n\ttasksList: [],\r\n};\r\n\r\nexport const tasksReducer = (state = taskListStore, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_TASK: {\r\n\t\t\tconst tasksListAddedTask = [action.payload, ...state.tasksList];\r\n\t\t\tconst newStateAddedTask = {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasksList: tasksListAddedTask,\r\n\t\t\t};\r\n\t\t\tlocalStorage.setItem(\r\n\t\t\t\tTASKS_ARR_STORAGE,\r\n\t\t\t\tJSON.stringify(tasksListAddedTask)\r\n\t\t\t);\r\n\t\t\treturn newStateAddedTask;\r\n\t\t}\r\n\r\n\t\tcase REMOVE_TASK: {\r\n\t\t\tconst tasksListRemovedTask = state.tasksList.filter(\r\n\t\t\t\titem => item.id !== action.payload\r\n\t\t\t);\r\n\t\t\tconst newStateRemovedTask = {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasksList: tasksListRemovedTask,\r\n\t\t\t};\r\n\t\t\tlocalStorage.setItem(\r\n\t\t\t\tTASKS_ARR_STORAGE,\r\n\t\t\t\tJSON.stringify(tasksListRemovedTask)\r\n\t\t\t);\r\n\t\t\treturn newStateRemovedTask;\r\n\t\t}\r\n\r\n\t\tcase REMOVE_ALL_TASK: {\r\n\t\t\tlocalStorage.removeItem(TASKS_ARR_STORAGE);\r\n\t\t\treturn { ...state, tasksList: [] };\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport const addTask = payload => ({ type: ADD_TASK, payload }),\r\n\tremoveTask = payload => ({ type: REMOVE_TASK, payload }),\r\n\tremoveAllTasks = () => ({ type: REMOVE_ALL_TASK });\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const time = {\r\n\th: PropTypes.number.isRequired,\r\n\tm: PropTypes.number.isRequired,\r\n\ts: PropTypes.number.isRequired,\r\n\tday: PropTypes.number,\r\n\tmonth: PropTypes.number,\r\n\tyear: PropTypes.number,\r\n};\r\n","import React from 'react';\r\n\r\n//material-ui:\r\nimport Box from '@material-ui/core/Box';\r\n\r\n//prop-types:\r\nimport PropTypes from 'prop-types';\r\nimport { time } from '../utils/propsTypes';\r\n\r\nconst TimeDisplay = ({ time, ...props }) => {\r\n\treturn (\r\n\t\t<Box {...props}>\r\n\t\t\t{time.h >= 10 ? time.h : '0' + time.h}:\r\n\t\t\t{time.m >= 10 ? time.m : '0' + time.m}:\r\n\t\t\t{time.s >= 10 ? time.s : '0' + time.s}\r\n\t\t\t{time.day && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<br />({time.day < 10 ? '0' + time.day : time.day}.\r\n\t\t\t\t\t{time.month < 10 ? '0' + time.month : time.month}.\r\n\t\t\t\t\t{time.year})\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nTimeDisplay.propTypes = {\r\n\ttime: PropTypes.shape(time),\r\n};\r\n\r\nexport default TimeDisplay;\r\n","import React from 'react';\r\n\r\n//prop-types:\r\nimport PropTypes from 'prop-types';\r\nimport { time } from '../../utils/propsTypes';\r\n\r\n//material-ui:\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n//components:\r\nimport TimeDisplay from '../timeDisplay';\r\n\r\n//variables:\r\nimport { COLOR_1 } from '../../utils/consts';\r\n\r\n//styles:\r\nconst useStyles = makeStyles({\r\n\tcircle: {\r\n\t\twidth: 250,\r\n\t\theight: 250,\r\n\t\tborderRadius: '50%',\r\n\t\tboxShadow: '0 6px 11px rgb(0, 0, 0, .22)',\r\n\t\tmargin: '15px 0',\r\n\t},\r\n\ttimerBlock: {\r\n\t\tcolor: COLOR_1,\r\n\t\tfontSize: 38,\r\n\t},\r\n});\r\n\r\nconst Timer = ({ time }) => {\r\n\t//styles\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\tjustifyContent=\"center\"\r\n\t\t\talignItems=\"center\"\r\n\t\t\tspacing={1}\r\n\t\t\tclassName={classes.circle}\r\n\t\t>\r\n\t\t\t<TimeDisplay time={time} className={classes.timerBlock} />\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nTimer.propTypes = {\r\n\ttime: PropTypes.shape(time),\r\n};\r\n\r\nexport default Timer;\r\n","import React from 'react';\r\n\r\n//react-router-dom\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//components:\r\nimport TimeDisplay from '../../components/timeDisplay';\r\n\r\n//material-ui:\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Timer from '../../components/timer/timer';\r\nimport Button from '@material-ui/core/Button';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n//react-flip-move: (https://www.npmjs.com/package/react-flip-move)\r\nimport FlipMove from 'react-flip-move';\r\n\r\n//variables:\r\nimport { COLOR_1, COLOR_2, BORDER_STYLE } from '../../utils/consts';\r\n\r\n//prop-types:\r\nimport PropTypes from 'prop-types';\r\nimport { time } from '../../utils/propsTypes';\r\n\r\n//styles:\r\nconst useStyles = makeStyles({\r\n\tpanelControl: {\r\n\t\tmarginTop: 20,\r\n\t},\r\n\tinput: {\r\n\t\t'& > div': {\r\n\t\t\tcolor: COLOR_1,\r\n\t\t},\r\n\t},\r\n\ttasksLog: {\r\n\t\tbackground: '#1fbcd3',\r\n\t\tcolor: 'white',\r\n\t\ttextTransform: 'capitalize',\r\n\t\theight: 50,\r\n\t},\r\n\tpanelControlItem: {\r\n\t\tcolor: 'gray',\r\n\t\tpadding: '20px 0',\r\n\t},\r\n\ttaskBlock: {\r\n\t\tcolor: COLOR_1,\r\n\t\tpadding: '20px 0',\r\n\t\tbackground: COLOR_2,\r\n\t\tborderBottom: BORDER_STYLE,\r\n\t},\r\n\tpanelLog: {\r\n\t\tborderBottom: BORDER_STYLE,\r\n\t},\r\n\tbtn: {\r\n\t\tcolor: COLOR_1,\r\n\t\tbackground: 'white',\r\n\t},\r\n});\r\n\r\nconst Home = ({\r\n\tinputTask,\r\n\thandleChange,\r\n\ttime,\r\n\tisRun,\r\n\tstartTimer,\r\n\tstopTimer,\r\n\ttaskList,\r\n\tdeleteTask,\r\n\tgenerateTasks,\r\n}) => {\r\n\t//styles\r\n\tconst classes = useStyles();\r\n\r\n\t//history\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/*Panel Control*/}\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tspacing={2}\r\n\t\t\t\tdirection=\"column\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tclassName={classes.panelControl}\r\n\t\t\t>\r\n\t\t\t\t{/*Task name*/}\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"task-input\"\r\n\t\t\t\t\t\tlabel={false}\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\tmaxLength: 55,\r\n\t\t\t\t\t\t\tstyle: { textAlign: 'center' },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\tmaxRows={4}\r\n\t\t\t\t\t\tvalue={inputTask}\r\n\t\t\t\t\t\tonChange={e => handleChange(e)}\r\n\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{/*Timer*/}\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<Timer time={time} />\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{/*Button*/}\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t{isRun ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tonClick={stopTimer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSTOP\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tonClick={startTimer}\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSTART\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t{/* Panel Header */}\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\tclassName={classes.panelControl}\r\n\t\t\t>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\tclassName={classes.tasksLog}\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t>\r\n\t\t\t\t\tTASKS LOG\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t{/*\tPanel Log */}\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustifyContent=\"space-around\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tclassName={classes.panelLog}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t<Box className={classes.panelControlItem}>№</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t<Box className={classes.panelControlItem}>Task</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t<Box className={classes.panelControlItem}>Time start</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t<Box className={classes.panelControlItem}>Time end</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t<Box className={classes.panelControlItem}>Time spend</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t<Box className={classes.panelControlItem}>Info</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t<Box className={classes.panelControlItem}>Delete</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<FlipMove>\r\n\t\t\t\t{/*history log*/}\r\n\t\t\t\t{taskList.map(\r\n\t\t\t\t\t({ id, descTask, startTime, endTime, spendTime }, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tjustifyContent=\"space-around\"\r\n\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\tclassName={classes.taskBlock}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t\t\t\t<Box>{i + 1}</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t\t\t{descTask.length >= 13\r\n\t\t\t\t\t\t\t\t\t\t\t? descTask.slice(0, 12) + '...'\r\n\t\t\t\t\t\t\t\t\t\t\t: descTask}\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t\t\t\t<TimeDisplay time={startTime} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t\t\t\t<TimeDisplay time={endTime} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t\t\t\t<TimeDisplay time={spendTime} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.btn}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\thistory.push('/task/' + id)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tInfo\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.btn}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => deleteTask(id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* Btn generate +15 tasks */}\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tspacing={2}\r\n\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tclassName={classes.panelControl}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={generateTasks}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGenerate tasks\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t</FlipMove>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nHome.propTypes = {\r\n\tinputTask: PropTypes.string,\r\n\thandleChange: PropTypes.func,\r\n\ttime: PropTypes.shape(time),\r\n\tisRun: Boolean,\r\n\tstartTimer: PropTypes.func,\r\n\tstopTimer: PropTypes.func,\r\n\ttaskList: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.string,\r\n\t\t\tdescTask: PropTypes.string,\r\n\t\t\tstartTime: PropTypes.shape(time),\r\n\t\t\tendTime: PropTypes.shape(time),\r\n\t\t\tspendTime: PropTypes.shape(time),\r\n\t\t})\r\n\t),\r\n\tdeleteTask: PropTypes.shape(time),\r\n\tgenerateTasks: PropTypes.shape(time),\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from 'react';\r\n\r\nconst useTimer = () => {\r\n\tconst [time, setTime] = useState({ h: 0, m: 0, s: 0 });\r\n\tconst [interv, setInterv] = useState(0);\r\n\tconst [isRun, setIsRun] = useState(false);\r\n\r\n\tlet updatedH = time.h,\r\n\t\tupdatedM = time.m,\r\n\t\tupdatedS = time.s;\r\n\r\n\tconst setTimer = initialTimer => {\r\n\t\tconst parseInitialTimer = new Date(initialTimer);\r\n\t\tconst newTime = new Date(Date.now() - parseInitialTimer);\r\n\t\tupdatedH = parseInt((newTime / (1000 * 60 * 60)) % 24);\r\n\t\tupdatedM = parseInt((newTime / (1000 * 60)) % 60);\r\n\t\tupdatedS = parseInt((newTime / 1000) % 60);\r\n\t};\r\n\r\n\tconst run = () => {\r\n\t\tif (updatedM === 59) {\r\n\t\t\tupdatedH++;\r\n\t\t\tupdatedM = -1;\r\n\t\t}\r\n\t\tif (updatedS === 59) {\r\n\t\t\tupdatedM++;\r\n\t\t\tupdatedS = -1;\r\n\t\t}\r\n\t\tsetTime({ h: updatedH, m: updatedM, s: updatedS });\r\n\t\tupdatedS++;\r\n\t};\r\n\r\n\tconst start = () => {\r\n\t\trun();\r\n\t\tsetIsRun(state => !state);\r\n\t\tsetInterv(setInterval(run, 1000));\r\n\t};\r\n\r\n\tconst stop = () => {\r\n\t\tclearInterval(interv);\r\n\t\tsetIsRun(state => !state);\r\n\t\tsetTime({ h: 0, m: 0, s: 0 });\r\n\t};\r\n\r\n\treturn { start, stop, time, isRun, setTimer };\r\n};\r\n\r\nexport default useTimer;\r\n","const SpendTime = (startTime, endTime) => {\r\n\tconst dateStartTask = new Date(startTime);\r\n\tconst newTime = new Date(endTime - dateStartTask);\r\n\tconst hours = parseInt((newTime / (1000 * 60 * 60)) % 24),\r\n\t\tminutes = parseInt((newTime / (1000 * 60)) % 60),\r\n\t\tseconds = parseInt((newTime / 1000) % 60);\r\n\r\n\treturn { hours, minutes, seconds, spendTimeMs: newTime };\r\n};\r\n\r\nexport default SpendTime;\r\n","//uuid:\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst DataTask = ({ startTime, endTime, spendTime, descTask }) => {\r\n\tconst id = uuidv4();\r\n\r\n\treturn {\r\n\t\tid,\r\n\t\tdescTask,\r\n\t\tstartTime: {\r\n\t\t\th: startTime.getHours(),\r\n\t\t\tm: startTime.getMinutes(),\r\n\t\t\ts: startTime.getSeconds(),\r\n\t\t\tday: startTime.getDate(),\r\n\t\t\tmonth: startTime.getMonth() + 1,\r\n\t\t\tyear: startTime.getFullYear(),\r\n\t\t},\r\n\t\tendTime: {\r\n\t\t\th: endTime.getHours(),\r\n\t\t\tm: endTime.getMinutes(),\r\n\t\t\ts: endTime.getSeconds(),\r\n\t\t\tday: endTime.getDate(),\r\n\t\t\tmonth: endTime.getMonth() + 1,\r\n\t\t\tyear: endTime.getFullYear(),\r\n\t\t},\r\n\t\tspendTime: {\r\n\t\t\th: spendTime.hours,\r\n\t\t\tm: spendTime.minutes,\r\n\t\t\ts: spendTime.seconds,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default DataTask;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n//react-redux:\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTask, removeTask, removeAllTasks } from '../../store/tasksReducer';\r\n\r\n//components:\r\nimport Home from './home.js';\r\n\r\n//Custom hooks:\r\nimport useTimer from '../../hooks/useTimer';\r\n\r\n//services:\r\nimport SpendTime from '../../services/spendTime';\r\nimport DataTask from '../../services/dataTask';\r\n\r\n//utils:\r\nimport { RANDOM_TASKS_ARR } from '../../utils/consts';\r\n\r\n//variables:\r\nimport {\r\n\tDESC_TASK_STORAGE,\r\n\tINIT_TASK,\r\n\tTIME_START_STORAGE,\r\n} from '../../utils/consts';\r\n\r\nconst HomeContainer = () => {\r\n\t//redux\r\n\tconst dispatch = useDispatch();\r\n\tconst taskList = useSelector(state => state.tasks.tasksList);\r\n\r\n\t//input of task\r\n\tconst [inputTask, setInputTask] = useState(INIT_TASK);\r\n\tconst handleChange = e => {\r\n\t\tsetInputTask(e.currentTarget.value);\r\n\t\tlocalStorage.setItem(\r\n\t\t\tDESC_TASK_STORAGE,\r\n\t\t\tJSON.stringify(e.currentTarget.value)\r\n\t\t);\r\n\t};\r\n\tconst { start, stop, time, isRun, setTimer } = useTimer();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tlocalStorage.getItem(TIME_START_STORAGE) &&\r\n\t\t\tlocalStorage.getItem(DESC_TASK_STORAGE)\r\n\t\t) {\r\n\t\t\tconst startTime = JSON.parse(\r\n\t\t\t\tlocalStorage.getItem(TIME_START_STORAGE)\r\n\t\t\t);\r\n\t\t\tconst descTask = JSON.parse(\r\n\t\t\t\tlocalStorage.getItem(DESC_TASK_STORAGE)\r\n\t\t\t);\r\n\t\t\tsetInputTask(descTask);\r\n\t\t\tsetTimer(startTime);\r\n\t\t\tstart();\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst startTimer = () => {\r\n\t\tlocalStorage.setItem(TIME_START_STORAGE, JSON.stringify(Date.now()));\r\n\t\tlocalStorage.setItem(DESC_TASK_STORAGE, JSON.stringify(inputTask));\r\n\t\tstart();\r\n\t};\r\n\r\n\tconst stopTimer = () => {\r\n\t\tconst startTime = JSON.parse(localStorage.getItem(TIME_START_STORAGE));\r\n\r\n\t\tconst spendTime = SpendTime(startTime, Date.now());\r\n\t\tconst parseDateStart = new Date(startTime);\r\n\t\tconst parseDateEnd = new Date(\r\n\t\t\tstartTime + Date.parse(spendTime.spendTimeMs)\r\n\t\t);\r\n\r\n\t\tconst newTaskCompleted = DataTask({\r\n\t\t\tstartTime: parseDateStart,\r\n\t\t\tendTime: parseDateEnd,\r\n\t\t\tspendTime: spendTime,\r\n\t\t\tdescTask: inputTask,\r\n\t\t});\r\n\r\n\t\tdispatch(addTask(newTaskCompleted));\r\n\t\tlocalStorage.removeItem(TIME_START_STORAGE);\r\n\t\tlocalStorage.removeItem(DESC_TASK_STORAGE);\r\n\t\tsetInputTask(INIT_TASK);\r\n\t\tstop();\r\n\t};\r\n\r\n\tconst deleteTask = id => {\r\n\t\tdispatch(removeTask(id));\r\n\t};\r\n\r\n\t//generateTasks\r\n\tconst generateTasks = () => {\r\n\t\tdispatch(removeAllTasks());\r\n\r\n\t\t//count tasks\r\n\t\tconst countTasks = Math.floor(Math.random() * 6) + 10;\r\n\r\n\t\t//Date start\r\n\t\tconst forLastDays = 7;\r\n\t\tconst randomHoursStartTime =\r\n\t\t\t(Math.floor(Math.random() * 24) + 1) * 1000 * 60 * 24;\r\n\t\tconst randomMinutesStartTime =\r\n\t\t\t(Math.floor(Math.random() * 60) + 1) * 1000 * 60;\r\n\t\tconst randomSecondsStartTime =\r\n\t\t\t(Math.floor(Math.random() * 60) + 1) * 1000;\r\n\t\tconst randomDaysStartTime =\r\n\t\t\t(Math.floor(Math.random() * forLastDays) + 1) * 1000 * 60 * 60 * 24;\r\n\t\tconst randomStartTaskDate = new Date(\r\n\t\t\tDate.now() -\r\n\t\t\t\trandomDaysStartTime -\r\n\t\t\t\trandomSecondsStartTime -\r\n\t\t\t\trandomMinutesStartTime -\r\n\t\t\t\trandomHoursStartTime\r\n\t\t);\r\n\r\n\t\t//generate tasks\r\n\t\tlet plusTimeToDateStart = Date.parse(randomStartTaskDate);\r\n\t\tfor (let i = 0; i < countTasks; i++) {\r\n\t\t\t//dates start/end/spend time\r\n\t\t\tconst startTime = new Date(plusTimeToDateStart);\r\n\t\t\tconst randomTimeSpendHours =\r\n\t\t\t\t(Math.floor(Math.random() * 90) + 10) * 1000 * 60;\r\n\t\t\tconst randomTimeSpendSeconds =\r\n\t\t\t\tMath.floor(Math.random() * 60) * 1000;\r\n\t\t\tconst randomTimeSpend =\r\n\t\t\t\trandomTimeSpendHours + randomTimeSpendSeconds;\r\n\t\t\tplusTimeToDateStart += randomTimeSpend;\r\n\t\t\tconst dateEndTask = new Date(plusTimeToDateStart);\r\n\t\t\tconst spendTime = SpendTime(startTime, dateEndTask);\r\n\t\t\tconst randomNameTask = Math.floor(\r\n\t\t\t\tMath.random() * RANDOM_TASKS_ARR.length\r\n\t\t\t);\r\n\r\n\t\t\t//obj data of task\r\n\t\t\tconst newTaskCompleted = DataTask({\r\n\t\t\t\tstartTime: startTime,\r\n\t\t\t\tendTime: dateEndTask,\r\n\t\t\t\tspendTime: spendTime,\r\n\t\t\t\tdescTask: RANDOM_TASKS_ARR[randomNameTask],\r\n\t\t\t});\r\n\r\n\t\t\tdispatch(addTask(newTaskCompleted));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Home\r\n\t\t\tinputTask={inputTask}\r\n\t\t\thandleChange={handleChange}\r\n\t\t\ttime={time}\r\n\t\t\tisRun={isRun}\r\n\t\t\tstartTimer={startTimer}\r\n\t\t\tstopTimer={stopTimer}\r\n\t\t\ttaskList={taskList}\r\n\t\t\tdeleteTask={deleteTask}\r\n\t\t\tgenerateTasks={generateTasks}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default HomeContainer;\r\n","import React from 'react';\r\n\r\n//styles:\r\nimport './loaderSpinner.css';\r\n\r\nconst LoaderSpinner = () => {\r\n\treturn (\r\n\t\t<div className=\"loadingio-spinner-spin-11c6t503gmv\">\r\n\t\t\t<div className=\"ldio-06z2k1d0zc9\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoaderSpinner;\r\n","import React from 'react';\r\n\r\n//react-router-dom:\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//material-ui:\r\nimport Grid from '@material-ui/core/Grid';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n//components:\r\nimport TimeDisplay from '../../components/timeDisplay';\r\nimport LoaderSpinner from '../../components/loaderSpinner/loaderSpinner';\r\n\r\n//prop-types:\r\nimport PropTypes from 'prop-types';\r\nimport { time } from '../../utils/propsTypes';\r\n\r\n//styles:\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\theight: '100vh',\r\n\t},\r\n\tfontSize: {\r\n\t\tfontSize: 20,\r\n\t},\r\n\tbtn: {\r\n\t\tfontSize: 15,\r\n\t},\r\n\tmarginRight: {\r\n\t\tmarginRight: 3,\r\n\t},\r\n});\r\n\r\nconst TaskId = ({ taskData, isLoading }) => {\r\n\t//react-router-dom:\r\n\tconst history = useHistory();\r\n\r\n\t//styles\r\n\tconst classes = useStyles();\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tclassName={classes.card}\r\n\t\t\t>\r\n\t\t\t\t<LoaderSpinner />\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\tjustifyContent=\"center\"\r\n\t\t\talignItems=\"center\"\r\n\t\t\tclassName={classes.card}\r\n\t\t>\r\n\t\t\t<Card>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tclassName={classes.fontSize}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Box className={classes.marginRight}>\r\n\t\t\t\t\t\t\t<b>Task:</b>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box>{taskData.descTask}</Box>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\talignItems=\"flex-start\"\r\n\t\t\t\t\t\tclassName={classes.fontSize}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Box className={classes.marginRight}>\r\n\t\t\t\t\t\t\t<b>Start Time:</b>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<TimeDisplay\r\n\t\t\t\t\t\t\t\ttime={taskData.startTime}\r\n\t\t\t\t\t\t\t\tclassName={classes.timerBlock}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\talignItems=\"flex-start\"\r\n\t\t\t\t\t\tclassName={classes.fontSize}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Box className={classes.marginRight}>\r\n\t\t\t\t\t\t\t<b>End Time:</b>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<TimeDisplay\r\n\t\t\t\t\t\t\t\ttime={taskData.endTime}\r\n\t\t\t\t\t\t\t\tclassName={classes.timerBlock}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tclassName={classes.fontSize}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Box className={classes.marginRight}>\r\n\t\t\t\t\t\t\t<b>Spend Time:</b>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<TimeDisplay\r\n\t\t\t\t\t\t\t\ttime={taskData.spendTime}\r\n\t\t\t\t\t\t\t\tclassName={classes.timerBlock}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={() => history.push('/')}\r\n\t\t\t\t\t\tclassName={classes.btn}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ArrowBackIcon\r\n\t\t\t\t\t\t\tfontSize=\"small\"\r\n\t\t\t\t\t\t\tclassName={classes.marginRight}\r\n\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\tback\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nTaskId.propTypes = {\r\n\tdescTask: PropTypes.string,\r\n\ttaskData: PropTypes.shape({\r\n\t\tid: PropTypes.string,\r\n\t\tdescTask: PropTypes.string,\r\n\t\tstartTime: PropTypes.shape(time),\r\n\t\tendTime: PropTypes.shape(time),\r\n\t\tspendTime: PropTypes.shape(time),\r\n\t}),\r\n\tisLoading: PropTypes.bool,\r\n};\r\n\r\nexport default TaskId;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { TASKS_ARR_STORAGE } from '../../utils/consts';\r\n\r\nimport TaskId from './taskId';\r\n\r\nconst TaskIdContainer = () => {\r\n\t//react-router-dom:\r\n\tlet { id } = useParams();\r\n\tlet history = useHistory();\r\n\r\n\t//states:\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst [taskData, setTaskData] = useState(false);\r\n\r\n\t//data:\r\n\tuseEffect(() => {\r\n\t\tif (localStorage.getItem(TASKS_ARR_STORAGE)) {\r\n\t\t\tconst parseTaskListLocalStorage = JSON.parse(\r\n\t\t\t\tlocalStorage.getItem(TASKS_ARR_STORAGE)\r\n\t\t\t);\r\n\t\t\tconst findTask = parseTaskListLocalStorage.find(\r\n\t\t\t\ttask => task.id === id\r\n\t\t\t);\r\n\t\t\tif (!findTask) {\r\n\t\t\t\treturn history.push('/404');\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn setTaskData(findTask);\r\n\t\t}\r\n\r\n\t\treturn history.push('/404');\r\n\t}, [isLoading]);\r\n\r\n\treturn <TaskId isLoading={isLoading} taskData={taskData} />;\r\n};\r\n\r\nexport default TaskIdContainer;\r\n","export default __webpack_public_path__ + \"static/media/error-404-design.18f495d7.png\";","import React from 'react';\r\n\r\n//images:\r\nimport img404 from './../assets/images/error-404-design.png';\r\n\r\n//react-router-dom:\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//material-ui:\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n//styles:\r\nconst useStyles = makeStyles({\r\n\terrorBlock: {\r\n\t\theight: '100vh',\r\n\t},\r\n\tblock: {\r\n\t\tmarginTop: 15,\r\n\t},\r\n});\r\n\r\nconst Error404 = () => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\r\n\tconst goHome = () => history.push('/');\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\tjustifyContent=\"center\"\r\n\t\t\talignItems=\"center\"\r\n\t\t\tdirection=\"column\"\r\n\t\t\tclassName={classes.errorBlock}\r\n\t\t>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<img src={img404} alt=\"404\" />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<Alert severity=\"error\">Sorry, this page not found :(</Alert>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item className={classes.block}>\r\n\t\t\t\tGo{' '}\r\n\t\t\t\t<Link\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\tunderline=\"always\"\r\n\t\t\t\t\tonClick={goHome}\r\n\t\t\t\t>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</Link>\r\n\t\t\t\t?\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Error404;\r\n","//components:\r\nimport HomeContainer from '../pages/home/homeContainer';\r\nimport TaskIdContainer from '../pages/taskId/taskIdContainer';\r\nimport Error404 from '../pages/Error404';\r\n\r\n//variables:\r\nimport {\r\n\tERROR_404_ROUTE,\r\n\tHOME_ROUTE,\r\n\tNOT_FOUND_ROUTE,\r\n\tTASK_ROUTE,\r\n} from '../utils/consts';\r\n\r\nexport const routers = [\r\n\t{\r\n\t\tpath: HOME_ROUTE,\r\n\t\tComponent: HomeContainer,\r\n\t\tisExact: true,\r\n\t},\r\n\t{\r\n\t\tpath: TASK_ROUTE + '/:id',\r\n\t\tComponent: TaskIdContainer,\r\n\t\tisExact: true,\r\n\t},\r\n\t{\r\n\t\tpath: ERROR_404_ROUTE,\r\n\t\tComponent: Error404,\r\n\t\tisExact: true,\r\n\t},\r\n\t{\r\n\t\tpath: NOT_FOUND_ROUTE,\r\n\t\tComponent: Error404,\r\n\t\tisExact: false,\r\n\t},\r\n];\r\n","import React, { useEffect } from 'react';\n\n//redux:\nimport { addTask } from './store/tasksReducer';\nimport { useDispatch } from 'react-redux';\n\n//styles:\nimport './App.css';\n\n//material-ui:\nimport Container from '@material-ui/core/Container';\n\n//react-router-dom:\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\n//pages:\nimport { routers } from './routers/routers';\n\n//variables:\nimport { TASKS_ARR_STORAGE } from './utils/consts';\n\nfunction App() {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (localStorage.getItem(TASKS_ARR_STORAGE)) {\n\t\t\tconst parseTaskListLocalStorage = JSON.parse(\n\t\t\t\tlocalStorage.getItem(TASKS_ARR_STORAGE)\n\t\t\t);\n\t\t\tparseTaskListLocalStorage.forEach(task => dispatch(addTask(task)));\n\t\t}\n\t}, [dispatch]);\n\n\treturn (\n\t\t<Container maxWidth=\"lg\">\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t{routers.map(({ path, Component, isExact }) => (\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tkey={path}\n\t\t\t\t\t\t\tpath={path}\n\t\t\t\t\t\t\texact={isExact}\n\t\t\t\t\t\t\tcomponent={Component}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n//reducers:\r\nimport { tasksReducer } from './tasksReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\ttasks: tasksReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//components:\nimport App from './App';\n\n//redux:\nimport { Provider } from 'react-redux';\n\n//store:\nimport { store } from './store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}